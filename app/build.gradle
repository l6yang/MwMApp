apply plugin: 'com.android.application'

Properties properties = new Properties()
def propertiesFile = rootProject.file('local.properties')
properties.load(new FileInputStream(propertiesFile))

android {
    signingConfigs {
        release {
            keyAlias properties["release.key"]
            keyPassword properties["release.key"]
            storeFile file(properties["release.keyPath"])
            storePassword properties["release.key"]
        }
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.mwm.loyal"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
        }
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                if (null != outputFile && outputFile.name.endsWith('.apk')) {
                    def calender = Calendar.getInstance(Locale.SIMPLIFIED_CHINESE)
                    def year = calender.get(Calendar.YEAR)
                    def month = calender.get(Calendar.MONTH)
                    def day = calender.get(Calendar.DAY_OF_MONTH)
                    def date = year + "_" + (month + 1) + "_" + day
                    def fileName = "mwm_${defaultConfig.versionName}_${date}.apk"
                    outputFileName = fileName
                }
            }
        }
    }
    buildTypes {
        release {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    dataBinding {
        enabled = true
    }
/*//项目中包含c++ 需要加下面代码
    sourceSets.main {
        jni.srcDirs = []
    }*/
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testImplementation 'junit:junit:4.12'
    implementation files('libs/com.baidu.tts_2.3.0.jar')
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraint
    implementation rootProject.ext.dependencies.v4
    implementation rootProject.ext.dependencies.recyclerview
    implementation rootProject.ext.dependencies.design
    implementation rootProject.ext.dependencies.drawable
    implementation rootProject.ext.dependencies.fresco
    implementation rootProject.ext.dependencies.permission_yzj
    implementation rootProject.ext.dependencies.ucrop
    implementation rootProject.ext.dependencies.rxjava
    implementation rootProject.ext.dependencies.rxandroid
    implementation rootProject.ext.dependencies.recyclerview_yzj
    implementation rootProject.ext.dependencies.retrofit2
    implementation rootProject.ext.dependencies.retrofit2_gson
    implementation rootProject.ext.dependencies.retrofit2_rxjava
    implementation rootProject.ext.dependencies.retrofit2_string
    implementation rootProject.ext.dependencies.phoenix
    implementation rootProject.ext.dependencies.constraint
    implementation rootProject.ext.dependencies.baseCommon
    implementation rootProject.ext.dependencies.butterknife
    annotationProcessor rootProject.ext.dependencies.butterknifeProcessor
    implementation rootProject.ext.dependencies.location_amap
}
